import org.gradle.api.artifacts.*

apply plugin: 'base' // To add "clean" task to the root project.
apply plugin: 'java'
apply plugin: 'idea'

subprojects {
    apply from: rootProject.file('common.gradle')
}

task mergedJavadoc(type: Javadoc, description: 'Creates Javadoc from all the projects.') {
    title = 'All modules'
    destinationDir = new File(project.buildDir, 'merged-javadoc')

    // Note: The closures below are executed lazily.
    source {
       subprojects*.sourceSets*.main*.allSource
    }
    classpath.from {
        subprojects*.configurations*.compile*.copyRecursive({ !(it instanceof ProjectDependency); })*.resolve()
    }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "joda-time:joda-time:2.2"
    testCompile "junit:junit:4.12"
    compile 'org.apache.tika:tika-core:1.16'
    compile 'org.apache.tika:tika-parsers:1.16'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.5.1'
    compile group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '3.5.1', classifier: 'models'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task wrapper(type: Wrapper)

task execute(type:JavaExec) {
   main = mainClass
   classpath = sourceSets.main.runtimeClasspath
}